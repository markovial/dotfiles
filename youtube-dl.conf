# https://github.com/ytdl-org/youtube-dl/blob/master/README.md

# Continue on download errors, for example to skip unavailable videos in a channel
--ignore-errors

--geo-bypass

--rm-cache-dir
# Download only videos not listed in the archive file.
# Record the IDs of all downloaded videos in it.
--download-archive "archive.log"

# Number of retries
--retries 5

# Number of retries for a fragment
--fragment-retries 5

# Abort downloading when some fragment is not available
--abort-on-unavailable-fragment

# Set file xattribute ytdl.filesize with expected file size
--xattr-set-filesize

# Output filename template, see the "OUTPUT TEMPLATE" for all the info
# --output "$PWD/%(uploader)s/%(title).80s/%(title).80s [%(format_id)s].%(ext)s"

--output "~/Downloads/youtube_dl/%(uploader)s/%(playlist_title)s/%(title)s-%(id)s.%(ext)s"
#--output "~/Downloads/youtube_dl/%(uploader)s/%(playlist_title)s/%(title)s.%(ext)s"
#--output "~/Downloads/youtube_dl/%(uploader)s/%(title)s.%(ext)s"


# Do not resume partially downloaded files (restart from beginning)
#--no-continue

# Write video description to a .description file
#--write-description

# Write video metadata to a .info.json file
#--write-info-json

# Write video annotations to a .annotations.xml file
#--write-annotations

# Write all thumbnail image formats to disk
#--write-all-thumbnails

# Set the preference for selecting the video format.
--format "(bestvideo[height>=4320][vcodec^=av01][fps>30]/
           bestvideo[height>=4320][vcodec^=av01]/
           bestvideo[height>=4320][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=4320][vcodec^=vp9.2]/
           bestvideo[height>=4320][vcodec^=vp9][fps>30]/
           bestvideo[height>=4320][vcodec^=vp9]/
           bestvideo[height>=4320][vcodec^=avc1][fps>30]/
           bestvideo[height>=4320][vcodec^=avc1]/
           bestvideo[height>=4320][fps>30]/
           bestvideo[height>=4320]/
           bestvideo[height>=2880][vcodec^=av01][fps>30]/
           bestvideo[height>=2880][vcodec^=av01]/
           bestvideo[height>=2880][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=2880][vcodec^=vp9.2]/
           bestvideo[height>=2880][vcodec^=vp9][fps>30]/
           bestvideo[height>=2880][vcodec^=vp9]/
           bestvideo[height>=2880][vcodec^=avc1][fps>30]/
           bestvideo[height>=2880][vcodec^=avc1]/
           bestvideo[height>=2880][fps>30]/
           bestvideo[height>=2880]/
           bestvideo[height>=2160][vcodec^=av01][fps>30]/
           bestvideo[height>=2160][vcodec^=av01]/
           bestvideo[height>=2160][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=2160][vcodec^=vp9.2]/
           bestvideo[height>=2160][vcodec^=vp9][fps>30]/
           bestvideo[height>=2160][vcodec^=vp9]/
           bestvideo[height>=2160][vcodec^=avc1][fps>30]/
           bestvideo[height>=2160][vcodec^=avc1]/
           bestvideo[height>=2160][fps>30]/
           bestvideo[height>=2160]/
           bestvideo[height>=1440][vcodec^=av01][fps>30]/
           bestvideo[height>=1440][vcodec^=av01]/
           bestvideo[height>=1440][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=1440][vcodec^=vp9.2]/
           bestvideo[height>=1440][vcodec^=vp9][fps>30]/
           bestvideo[height>=1440][vcodec^=vp9]/
           bestvideo[height>=1440][vcodec^=avc1][fps>30]/
           bestvideo[height>=1440][vcodec^=avc1]/
           bestvideo[height>=1440][fps>30]/
           bestvideo[height>=1440]/
           bestvideo[height>=1080][vcodec^=av01][fps>30]/
           bestvideo[height>=1080][vcodec^=av01]/
           bestvideo[height>=1080][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=1080][vcodec^=vp9.2]/
           bestvideo[height>=1080][vcodec^=vp9][fps>30]/
           bestvideo[height>=1080][vcodec^=vp9]/
           bestvideo[height>=1080][vcodec^=avc1][fps>30]/
           bestvideo[height>=1080][vcodec^=avc1]/
           bestvideo[height>=1080][fps>30]/
           bestvideo[height>=1080]/
           bestvideo[height>=720][vcodec^=av01][fps>30]/
           bestvideo[height>=720][vcodec^=av01]/
           bestvideo[height>=720][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=720][vcodec^=vp9.2]/
           bestvideo[height>=720][vcodec^=vp9][fps>30]/
           bestvideo[height>=720][vcodec^=vp9]/
           bestvideo[height>=720][vcodec^=avc1][fps>30]/
           bestvideo[height>=720][vcodec^=avc1]/
           bestvideo[height>=720][fps>30]/
           bestvideo[height>=720]/
           bestvideo[height>=480][vcodec^=av01][fps>30]/
           bestvideo[height>=480][vcodec^=av01]/
           bestvideo[height>=480][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=480][vcodec^=vp9.2]/
           bestvideo[height>=480][vcodec^=vp9][fps>30]/
           bestvideo[height>=480][vcodec^=vp9]/
           bestvideo[height>=480][vcodec^=avc1][fps>30]/
           bestvideo[height>=480][vcodec^=avc1]/
           bestvideo[height>=480][fps>30]/
           bestvideo[height>=480]/
           bestvideo[height>=360][vcodec^=av01][fps>30]/
           bestvideo[height>=360][vcodec^=av01]/
           bestvideo[height>=360][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=360][vcodec^=vp9.2]/
           bestvideo[height>=360][vcodec^=vp9][fps>30]/
           bestvideo[height>=360][vcodec^=vp9]/
           bestvideo[height>=360][vcodec^=avc1][fps>30]/
           bestvideo[height>=360][vcodec^=avc1]/
           bestvideo[height>=360][fps>30]/
           bestvideo[height>=360]/
           bestvideo[height>=240][vcodec^=av01][fps>30]/
           bestvideo[height>=240][vcodec^=av01]/
           bestvideo[height>=240][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=240][vcodec^=vp9.2]/
           bestvideo[height>=240][vcodec^=vp9][fps>30]/
           bestvideo[height>=240][vcodec^=vp9]/
           bestvideo[height>=240][vcodec^=avc1][fps>30]/
           bestvideo[height>=240][vcodec^=avc1]/
           bestvideo[height>=240][fps>30]/
           bestvideo[height>=240]/
           bestvideo[height>=144][vcodec^=av01][fps>30]/
           bestvideo[height>=144][vcodec^=av01]/
           bestvideo[height>=144][vcodec^=vp9.2][fps>30]/
           bestvideo[height>=144][vcodec^=vp9.2]/
           bestvideo[height>=144][vcodec^=vp9][fps>30]/
           bestvideo[height>=144][vcodec^=vp9]/
           bestvideo[height>=144][vcodec^=avc1][fps>30]/
           bestvideo[height>=144][vcodec^=avc1]/
           bestvideo[height>=144][fps>30]/
           bestvideo[height>=144]/
           bestvideo)
           +(bestaudio[acodec^=opus]/
           bestaudio)/
           best"

# If a merge is required (e.g. bestvideo+bestaudio),
# output to given container format. One of mkv, mp4, ogg,
# webm, flv. Ignored if no merge is required.
--merge-output-format mkv

# Download all the available subtitles of the video
#--all-subs

# Specify ffmpeg/avconv audio quality, insert a value between 0 (better)
# and 9 (worse) for VBR or a specific bitrate like 128K (default 5)
--audio-quality 0

# Embed subtitles in the video (only for mp4, webm and mkv videos)
#--embed-subs

# Embed thumbnail in the audio as cover art
#--embed-thumbnail

# Write metadata to the video file
#--add-metadata

# Write metadata to the video file's xattrs (using dublin core and xdg standards)
#--xattrs



